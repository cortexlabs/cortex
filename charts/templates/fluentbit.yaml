apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluent-bit
  namespace: {{ .Release.Namespace }}
  labels:
    app: fluent-bit
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluent-bit-read
rules:
  - apiGroups: [""]
    resources:
      - namespaces
      - pods
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fluent-bit-read
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fluent-bit-read
subjects:
  - kind: ServiceAccount
    name: fluent-bit
    namespace: {{ .Release.Namespace }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-config
  namespace: {{ .Release.Namespace }}
  labels:
    k8s-app: fluent-bit
data:
  # Configuration files: server, input, filters and output
  # ======================================================
  fluent-bit.conf: |
    [SERVICE]
        Flush         1
        Grace         30
        Log_Level     info
        Daemon        off
        Parsers_File  parsers.conf
        HTTP_Server   Off
        Config_Watch  Off

    @INCLUDE input-kubernetes.conf
    @INCLUDE filter-kubernetes.conf
    @INCLUDE output.conf

  input-kubernetes.conf: |
    [INPUT]
        Name              tail
        Tag               kube.*
        Path              /var/log/containers/*.log
        Parser            docker
        DB                /var/log/flb_kube.db
        Mem_Buf_Limit     5MB
        Skip_Long_Lines   On
        Refresh_Interval  10

  filter-kubernetes.conf: |
    [FILTER]
        Name                kubernetes
        Match               kube.var.log.containers.*
        Kube_URL            https://kubernetes.default.svc:443
        Kube_Tag_Prefix     kube.var.log.containers.
        Merge_Log           On

    # this retagging helps stackdriver and it doesn't matter for cloudwatch
    # https://docs.fluentbit.io/manual/pipeline/outputs/stackdriver#configuration-file
    [FILTER]
        Name rewrite_tag
        Match kube.var.log.containers.*
        Rule $log ^(.*)$ k8s_container.$kubernetes['namespace_name'].$kubernetes['pod_name'].$kubernetes['container_name'] false

    [FILTER]
        Name                modify
        Match               k8s_container.*
        Condition           Key_Exists message
        Hard_rename         message log

    [FILTER]
        Name                nest
        Match               k8s_container.*
        Operation           lift
        Nested_under        kubernetes
        Add_prefix          k8s.

    [FILTER]
        Name                modify
        Match               k8s_container.*
        Condition           Key_Does_Not_Exist labels
        Rename              k8s.labels labels

    [FILTER]
        Name                modify
        Match               k8s_container.*
        Remove_wildcard     k8s.

  output.conf: |
    {{- if eq .Values.global.provider "aws" }}
    [OUTPUT]
        Name              cloudwatch
        Match             k8s_container.*
        region            {{ .Values.cortex.region }}
        log_group_name    {{ .Values.cortex.cluster_name }}
        log_stream_prefix kube.
        auto_create_group true
    {{- end }}

    {{- if eq .Values.global.provider "gcp" }}
    [OUTPUT]
        Name                  stackdriver
        Match                 k8s_container.*
        resource              k8s_container
        k8s_cluster_name      {{ .Values.cortex.cluster_name }}
        k8s_cluster_location  {{ .Values.cortex.zone }}
    {{- end }}

  parsers.conf: |
    [PARSER]
        Name        docker
        Format      json
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
        Time_Keep   On
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluent-bit
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      k8s-app: fluent-bit-logging
  template:
    metadata:
      labels:
        app: fluent-bit
        k8s-app: fluent-bit-logging
        version: v1
        kubernetes.io/cluster-service: "true"
    spec:
      containers:
        - name: fluent-bit
          image: {{ .Values.cortex.image_fluent_bit }}
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 100m
              memory: 150Mi
            limits:
              memory: 150Mi
          ports:
            - containerPort: 2020
          {{- if eq .Values.global.provider "gcp" }}
          env:
            - name: GOOGLE_SERVICE_CREDENTIALS
              value: /var/secrets/google/key.json
          {{- end }}
          {{- if eq .Values.global.provider "aws" }}
          envFrom:
            - secretRef:
                name: aws-credentials
          {{- end }}
          volumeMounts:
            - name: varlog
              mountPath: /var/log
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: fluent-bit-config
              mountPath: /fluent-bit/etc/
            {{- if eq .Values.global.provider "gcp" }}
            - name: gcp-credentials
              mountPath: /var/secrets/google
            {{- end }}
      terminationGracePeriodSeconds: 60
      volumes:
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config
        {{- if eq .Values.global.provider "gcp" }}
        - name: gcp-credentials
          secret:
            secretName: gcp-credentials
        {{- end }}
      serviceAccountName: fluent-bit
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
        - operator: "Exists"
          effect: "NoExecute"
        - operator: "Exists"
          effect: "NoSchedule"
        {{- if eq .Values.global.provider "aws" }}
        - key: aws.amazon.com/neuron
          operator: Exists
          effect: NoSchedule
        {{- end }}
        - key: nvidia.com/gpu
          operator: Exists
          effect: NoSchedule
        - key: workload
          operator: Exists
          effect: NoSchedule
---
