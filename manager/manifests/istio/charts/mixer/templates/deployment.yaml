{{- define "policy_container" }}
    spec:
      serviceAccountName: istio-mixer-service-account
{{- if $.Values.global.priorityClassName }}
      priorityClassName: "{{ $.Values.global.priorityClassName }}"
{{- end }}
      volumes:
      - name: istio-certs
        secret:
          secretName: istio.istio-mixer-service-account
          optional: true
      {{- if $.Values.global.sds.enabled }}
      - hostPath:
          path: /var/run/sds
        name: sds-uds-path
      {{- if $.Values.global.sds.useTrustworthyJwt }}
      - name: istio-token
        projected:
          sources:
          - serviceAccountToken:
              audience: {{ $.Values.global.trustDomain }}
              expirationSeconds: 43200
              path: istio-token
      {{- end }}
      {{- end }}
      - name: uds-socket
        emptyDir: {}
      - name: policy-adapter-secret
        secret:
          secretName: policy-adapter-secret
          optional: true
      affinity:
      {{- include "nodeaffinity" . | indent 6 }}
      {{- include "podAntiAffinity" . | indent 6 }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 6 }}
      {{- else if .Values.global.defaultTolerations }}
      tolerations:
{{ toYaml .Values.global.defaultTolerations | indent 6 }}
      {{- end }}
      containers:
      - name: mixer
{{- if contains "/" .Values.image }}
        image: "{{ .Values.image }}"
{{- else }}
        image: "{{ $.Values.global.hub }}/{{ $.Values.image }}:{{ $.Values.global.tag }}"
{{- end }}
        imagePullPolicy: {{ $.Values.global.imagePullPolicy }}
        ports:
        - containerPort: {{ .Values.global.monitoringPort }}
        - containerPort: 42422
        args:
          - --monitoringPort={{ .Values.global.monitoringPort }}
          - --address
          - unix:///sock/mixer.socket
{{- if $.Values.global.logging.level }}
          - --log_output_level={{ $.Values.global.logging.level }}
{{- end}}
{{- if $.Values.global.useMCP }}
    {{- if $.Values.global.controlPlaneSecurityEnabled}}
          - --configStoreURL=mcps://istio-galley.{{ $.Release.Namespace }}.svc:9901
    {{- else }}
          - --configStoreURL=mcp://istio-galley.{{ $.Release.Namespace }}.svc:9901
    {{- end }}
{{- else }}
          - --configStoreURL=k8s://
{{- end }}
          - --configDefaultNamespace={{ $.Release.Namespace }}
          {{- if $.Values.adapters.useAdapterCRDs }}
          - --useAdapterCRDs=true
          {{- else }}
          - --useAdapterCRDs=false
          {{- end }}
          {{- if $.Values.templates.useTemplateCRDs }}
          - --useTemplateCRDs=true
          {{- else }}
          - --useTemplateCRDs=false
          {{- end }}
          {{- if $.Values.global.tracer.zipkin.address }}
          - --trace_zipkin_url=http://{{- $.Values.global.tracer.zipkin.address }}/api/v1/spans
          {{- else }}
          - --trace_zipkin_url=http://zipkin.{{ $.Release.Namespace }}:9411/api/v1/spans
          {{- end }}
        {{- if .Values.env }}
        env:
        {{- range $key, $val := .Values.env }}
        - name: {{ $key }}
          value: "{{ $val }}"
        {{- end }}
        {{- end }}
        resources:
{{- if .Values.policy.resources }}
{{ toYaml .Values.policy.resources | indent 10 }}
{{- else if .Values.resources }}
{{ toYaml .Values.resources | indent 10 }}
{{- else }}
{{ toYaml .Values.global.defaultResources | indent 10 }}
{{- end }}
        volumeMounts:
{{- if $.Values.global.useMCP }}
        - name: istio-certs
          mountPath: /etc/certs
          readOnly: true
{{- end }}
        - name: uds-socket
          mountPath: /sock
        livenessProbe:
          httpGet:
            path: /version
            port: {{ .Values.global.monitoringPort }}
          initialDelaySeconds: 5
          periodSeconds: 5
      - name: istio-proxy
{{- if contains "/" $.Values.global.proxy.image }}
        image: "{{ $.Values.global.proxy.image }}"
{{- else }}
        image: "{{ $.Values.global.hub }}/{{ $.Values.global.proxy.image }}:{{ $.Values.global.tag }}"
{{- end }}
        imagePullPolicy: {{ $.Values.global.imagePullPolicy }}
        ports:
        - containerPort: 9091
        - containerPort: 15004
        - containerPort: 15090
          protocol: TCP
          name: http-envoy-prom
        args:
        - proxy
        - --domain
        - $(POD_NAMESPACE).svc.{{ $.Values.global.proxy.clusterDomain }}
        - --serviceCluster
        - istio-policy
        - --templateFile
        - /etc/istio/proxy/envoy_policy.yaml.tmpl
      {{- if $.Values.global.controlPlaneSecurityEnabled }}
        - --controlPlaneAuthPolicy
        - MUTUAL_TLS
      {{- else }}
        - --controlPlaneAuthPolicy
        - NONE
      {{- end }}
      {{- if $.Values.global.trustDomain }}
        - --trust-domain={{ $.Values.global.trustDomain }}
      {{- end }}
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        resources:
{{- if $.Values.global.proxy.resources }}
{{ toYaml $.Values.global.proxy.resources | indent 10 }}
{{- else }}
{{ toYaml .Values.global.defaultResources | indent 10 }}
{{- end }}
        volumeMounts:
        - name: istio-certs
          mountPath: /etc/certs
          readOnly: true
        {{- if $.Values.global.sds.enabled }}
        - name: sds-uds-path
          mountPath: /var/run/sds
          readOnly: true
        {{- if $.Values.global.sds.useTrustworthyJwt }}
        - name: istio-token
          mountPath: /var/run/secrets/tokens
        {{- end }}
        {{- end }}
        - name: uds-socket
          mountPath: /sock
        - name: policy-adapter-secret
          mountPath: /var/run/secrets/istio.io/policy/adapter
          readOnly: true
{{- end }}

{{- define "telemetry_container" }}
    spec:
      serviceAccountName: istio-mixer-service-account
      volumes:
      - name: istio-certs
        secret:
          secretName: istio.istio-mixer-service-account
          optional: true
      {{- if $.Values.global.sds.enabled }}
      - hostPath:
          path: /var/run/sds
        name: sds-uds-path
      {{- if $.Values.global.sds.useTrustworthyJwt }}
      - name: istio-token
        projected:
          sources:
          - serviceAccountToken:
              audience: {{ $.Values.global.trustDomain }}
              expirationSeconds: 43200
              path: istio-token
      {{- end }}
      {{- end }}
      - name: uds-socket
        emptyDir: {}
      - name: telemetry-adapter-secret
        secret:
          secretName: telemetry-adapter-secret
          optional: true
      affinity:
      {{- include "nodeaffinity" . | indent 6 }}
      {{- include "podAntiAffinity" . | indent 6 }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 6 }}
      {{- else if .Values.global.defaultTolerations }}
      tolerations:
{{ toYaml .Values.global.defaultTolerations | indent 6 }}
      {{- end }}
      containers:
      - name: mixer
{{- if contains "/" .Values.image }}
        image: "{{ .Values.image }}"
{{- else }}
        image: "{{ $.Values.global.hub }}/{{ $.Values.image }}:{{ $.Values.global.tag }}"
{{- end }}
        imagePullPolicy: {{ $.Values.global.imagePullPolicy }}
        ports:
        - containerPort: {{ .Values.global.monitoringPort }}
        - containerPort: 42422
        args:
          - --monitoringPort={{ .Values.global.monitoringPort }}
          - --address
          - unix:///sock/mixer.socket
{{- if $.Values.global.logging.level }}
          - --log_output_level={{ $.Values.global.logging.level }}
{{- end}}
{{- if $.Values.global.useMCP }}
    {{- if $.Values.global.controlPlaneSecurityEnabled}}
          - --configStoreURL=mcps://istio-galley.{{ $.Release.Namespace }}.svc:9901
          - --certFile=/etc/certs/cert-chain.pem
          - --keyFile=/etc/certs/key.pem
          - --caCertFile=/etc/certs/root-cert.pem
    {{- else }}
          - --configStoreURL=mcp://istio-galley.{{ $.Release.Namespace }}.svc:9901
    {{- end }}
{{- else }}
          - --configStoreURL=k8s://
{{- end }}
          - --configDefaultNamespace={{ $.Release.Namespace }}
          {{- if $.Values.adapters.useAdapterCRDs }}
          - --useAdapterCRDs=true
          {{- else }}
          - --useAdapterCRDs=false
          {{- end }}
          {{- if $.Values.templates.useTemplateCRDs }}
          - --useTemplateCRDs=true
          {{- else }}
          - --useTemplateCRDs=false
          {{- end }}
          {{- if $.Values.global.tracer.zipkin.address }}
          - --trace_zipkin_url=http://{{- $.Values.global.tracer.zipkin.address }}/api/v1/spans
          {{- else }}
          - --trace_zipkin_url=http://zipkin.{{ $.Release.Namespace }}:9411/api/v1/spans
          {{- end }}
          - --averageLatencyThreshold
          - {{ $.Values.telemetry.loadshedding.latencyThreshold }}
          - --loadsheddingMode
          - {{ $.Values.telemetry.loadshedding.mode }}
        {{- if .Values.env }}
        env:
        {{- range $key, $val := .Values.env }}
        - name: {{ $key }}
          value: "{{ $val }}"
        {{- end }}
        {{- end }}
        resources:
{{- if .Values.telemetry.resources }}
{{ toYaml .Values.telemetry.resources | indent 10 }}
{{- else if .Values.resources }}
{{ toYaml .Values.resources | indent 10 }}
{{- else }}
{{ toYaml .Values.global.defaultResources | indent 10 }}
{{- end }}
        volumeMounts:
{{- if $.Values.global.useMCP }}
        - name: istio-certs
          mountPath: /etc/certs
          readOnly: true
{{- end }}
        - name: telemetry-adapter-secret
          mountPath: /var/run/secrets/istio.io/telemetry/adapter
          readOnly: true
        - name: uds-socket
          mountPath: /sock
        livenessProbe:
          httpGet:
            path: /version
            port: {{ .Values.global.monitoringPort }}
          initialDelaySeconds: 5
          periodSeconds: 5
      - name: istio-proxy
{{- if contains "/" $.Values.global.proxy.image }}
        image: "{{ $.Values.global.proxy.image }}"
{{- else }}
        image: "{{ $.Values.global.hub }}/{{ $.Values.global.proxy.image }}:{{ $.Values.global.tag }}"
{{- end }}
        imagePullPolicy: {{ $.Values.global.imagePullPolicy }}
        ports:
        - containerPort: 9091
        - containerPort: 15004
        - containerPort: 15090
          protocol: TCP
          name: http-envoy-prom
        args:
        - proxy
        - --domain
        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
        - --serviceCluster
        - istio-telemetry
        - --templateFile
        - /etc/istio/proxy/envoy_telemetry.yaml.tmpl
      {{- if $.Values.global.controlPlaneSecurityEnabled }}
        - --controlPlaneAuthPolicy
        - MUTUAL_TLS
      {{- else }}
        - --controlPlaneAuthPolicy
        - NONE
      {{- end }}
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        resources:
{{- if $.Values.global.proxy.resources }}
{{ toYaml $.Values.global.proxy.resources | indent 10 }}
{{- else }}
{{ toYaml .Values.global.defaultResources | indent 10 }}
{{- end }}
        volumeMounts:
        - name: istio-certs
          mountPath: /etc/certs
          readOnly: true
        {{- if $.Values.global.sds.enabled }}
        - name: sds-uds-path
          mountPath: /var/run/sds
          readOnly: true
        {{- if $.Values.global.sds.useTrustworthyJwt }}
        - name: istio-token
          mountPath: /var/run/secrets/tokens
        {{- end }}
        {{- end }}
        - name: uds-socket
          mountPath: /sock
{{- end }}


{{- range $key, $spec := .Values }}
{{- if or (eq $key "policy") (eq $key "telemetry") }}
{{- if $spec.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: istio-{{ $key }}
  namespace: {{ $.Release.Namespace }}
  labels:
    app: istio-mixer
    chart: {{ template "mixer.chart" $ }}
    heritage: {{ $.Release.Service }}
    release: {{ $.Release.Name }}
    istio: mixer
spec:
{{- if not $spec.autoscaleEnabled }}
{{- if $spec.replicaCount }}
  replicas: {{ $spec.replicaCount }}
{{- else }}
  replicas: 1
{{- end }}
{{- end }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      istio: mixer
      istio-mixer-type: {{ $key }}
  template:
    metadata:
      labels:
        app: {{ $key }}
        chart: {{ template "mixer.chart" $ }}
        heritage: {{ $.Release.Service }}
        release: {{ $.Release.Name }}
        istio: mixer
        istio-mixer-type: {{ $key }}
      annotations:
        sidecar.istio.io/inject: "false"
{{- with $.Values.podAnnotations }}
{{ toYaml . | indent 8 }}
{{- end }}
{{- if eq $key "policy"}}
{{- template "policy_container" $ }}
{{- else }}
{{- template "telemetry_container" $ }}
{{- end }}

---
{{- end }}
{{- end }}
{{- end }} {{/* range */}}
