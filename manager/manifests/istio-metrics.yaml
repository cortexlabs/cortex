# Copyright 2019 Cortex Labs, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Configuration for a metric measuring bytes sent from a server
# to a client
apiVersion: config.istio.io/v1alpha2
kind: instance
metadata:
  name: operatorsentbytes
  namespace: $CORTEX_NAMESPACE
spec:
  compiledTemplate: metric
  params:
    value: connection.sent.bytes | 0 # uses a TCP-specific attribute
    dimensions:
      source_service: source.workload.name | "unknown"
    monitoredResourceType: '"UNSPECIFIED"'
---
# Configuration for a metric measuring bytes sent from a client
# to a server
apiVersion: config.istio.io/v1alpha2
kind: instance
metadata:
  name: operatorreceivedbytes
  namespace: $CORTEX_NAMESPACE
spec:
  compiledTemplate: metric
  params:
    value: connection.received.bytes | 0 # uses a TCP-specific attribute
    dimensions:
      source_service: source.workload.name | "unknown"
      source_version: source.labels["version"] | "unknown"
      destination_version: destination.labels["version"] | "unknown"
    monitoredResourceType: '"UNSPECIFIED"'
---
# Configuration for a Prometheus handler
apiVersion: config.istio.io/v1alpha2
kind: handler
metadata:
  name: operatorhandler
  namespace: $CORTEX_NAMESPACE
spec:
  compiledAdapter: cloudwatch
  params:
    namespace: $CORTEX_NAMESPACE
    logGroupName: $CORTEX_LOG_GROUP
    logStreamName: $CORTEX_LOG_GROUP
    metricInfo:
      operatorsentbytes.instance.cortex:
        unit: Bytes
      operatorreceivedbytes.instance.cortex:
        unit: Bytes
    logs: {}
---
# Rule to send metric instances to a Prometheus handler
apiVersion: config.istio.io/v1alpha2
kind: rule
metadata:
  name: operatorcloudwatch
  namespace: $CORTEX_NAMESPACE
spec:
  match: context.protocol == "tcp"
  actions:
  - handler: operatorhandler
    instances:
    - operatorreceivedbytes
    - operatorsentbytes
