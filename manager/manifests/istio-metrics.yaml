# Copyright 2019 Cortex Labs, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Configuration for a metric measuring bytes sent from a server
# to a client
apiVersion: config.istio.io/v1alpha2
kind: instance
metadata:
  name: cortex-request-count
  namespace: $CORTEX_NAMESPACE
spec:
  compiledTemplate: metric
  params:
    value: "1"
    dimensions:
      reporter: conditional((context.reporter.kind | "inbound") == "outbound", "client", "server")
      source_service: source.workload.name | "unknown"
      namespace: source.namespace | "unknown"
      path: request.url_path | "unknown"
      origin_ip: origin.ip
      response_duration: response.duration
      response_code: response.code
      request_time: request.time
    monitoredResourceType: '"UNSPECIFIED"'
---
apiVersion: config.istio.io/v1alpha2
kind: instance
metadata:
  name: cortex-response-time
  namespace: $CORTEX_NAMESPACE
spec:
  compiledTemplate: metric
  params:
    value: response.duration
    dimensions:
      reporter: conditional((context.reporter.kind | "inbound") == "outbound", "client", "server")
      source_service: source.workload.name | "unknown"
      namespace: source.namespace | "unknown"
      path: request.url_path | "unknown"
      origin_ip: origin.ip
      response_duration: response.duration
      request_time: request.time
    monitoredResourceType: '"UNSPECIFIED"'
---
apiVersion: config.istio.io/v1alpha2
kind: handler
metadata:
  name: cortex-request-handler
  namespace: $CORTEX_NAMESPACE
spec:
  compiledAdapter: cloudwatch
  params:
    namespace: $CORTEX_NAMESPACE
    logGroupName: $CORTEX_LOG_GROUP
    logStreamName: $CORTEX_LOG_GROUP
    metricInfo:
      cortex-request-count.instance.cortex:
        unit: Count
      cortex-response-time.instance.cortex:
        unit: Milliseconds
    logs: {}
---
apiVersion: config.istio.io/v1alpha2
kind: rule
metadata:
  name: cortex-operator-requests
  namespace: $CORTEX_NAMESPACE
spec:
  match: source.workload.name == "operator-ingressgateway"
  actions:
  - handler: cortex-request-handler
    instances:
    - cortex-request-count
    - cortex-response-time
---
apiVersion: config.istio.io/v1alpha2
kind: rule
metadata:
  name: cortex-apis-requests
  namespace: $CORTEX_NAMESPACE
spec:
  match: source.workload.name == "apis-ingressgateway"
  actions:
  - handler: cortex-request-handler
    instances:
    - cortex-request-count
    - cortex-response-time
---
apiVersion: config.istio.io/v1alpha2
kind: rule
metadata:
  name: cortex-apis-errors
  namespace: $CORTEX_NAMESPACE
spec:
  match: source.workload.name == "apis-ingressgateway" && response.code >= 400
  actions:
  - handler: cortex-request-handler
    instances:
    - cortex-request-count
    - cortex-response-time
---
apiVersion: config.istio.io/v1alpha2
kind: rule
metadata:
  name: cortex-operator-errors
  namespace: $CORTEX_NAMESPACE
spec:
  match: source.workload.name == "operator-ingressgateway" && response.code >= 400
  actions:
  - handler: cortex-request-handler
    instances:
    - cortex-request-count
    - cortex-response-time
---

