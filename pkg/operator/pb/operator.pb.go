// Code generated by protoc-gen-go. DO NOT EDIT.
// source: operator.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type InfoResponse struct {
	Response             []byte   `protobuf:"bytes,1,opt,name=Response,proto3" json:"Response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoResponse) Reset()         { *m = InfoResponse{} }
func (m *InfoResponse) String() string { return proto.CompactTextString(m) }
func (*InfoResponse) ProtoMessage()    {}
func (*InfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb8d3714996346ac, []int{0}
}

func (m *InfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoResponse.Unmarshal(m, b)
}
func (m *InfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoResponse.Marshal(b, m, deterministic)
}
func (m *InfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoResponse.Merge(m, src)
}
func (m *InfoResponse) XXX_Size() int {
	return xxx_messageInfo_InfoResponse.Size(m)
}
func (m *InfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InfoResponse proto.InternalMessageInfo

func (m *InfoResponse) GetResponse() []byte {
	if m != nil {
		return m.Response
	}
	return nil
}

type DeployResponse struct {
	Response             []byte   `protobuf:"bytes,1,opt,name=Response,proto3" json:"Response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeployResponse) Reset()         { *m = DeployResponse{} }
func (m *DeployResponse) String() string { return proto.CompactTextString(m) }
func (*DeployResponse) ProtoMessage()    {}
func (*DeployResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb8d3714996346ac, []int{1}
}

func (m *DeployResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployResponse.Unmarshal(m, b)
}
func (m *DeployResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployResponse.Marshal(b, m, deterministic)
}
func (m *DeployResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployResponse.Merge(m, src)
}
func (m *DeployResponse) XXX_Size() int {
	return xxx_messageInfo_DeployResponse.Size(m)
}
func (m *DeployResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeployResponse proto.InternalMessageInfo

func (m *DeployResponse) GetResponse() []byte {
	if m != nil {
		return m.Response
	}
	return nil
}

type RefreshResponse struct {
	Response             []byte   `protobuf:"bytes,1,opt,name=Response,proto3" json:"Response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefreshResponse) Reset()         { *m = RefreshResponse{} }
func (m *RefreshResponse) String() string { return proto.CompactTextString(m) }
func (*RefreshResponse) ProtoMessage()    {}
func (*RefreshResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb8d3714996346ac, []int{2}
}

func (m *RefreshResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefreshResponse.Unmarshal(m, b)
}
func (m *RefreshResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefreshResponse.Marshal(b, m, deterministic)
}
func (m *RefreshResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefreshResponse.Merge(m, src)
}
func (m *RefreshResponse) XXX_Size() int {
	return xxx_messageInfo_RefreshResponse.Size(m)
}
func (m *RefreshResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RefreshResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RefreshResponse proto.InternalMessageInfo

func (m *RefreshResponse) GetResponse() []byte {
	if m != nil {
		return m.Response
	}
	return nil
}

type DeleteResponse struct {
	Response             []byte   `protobuf:"bytes,1,opt,name=Response,proto3" json:"Response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteResponse) Reset()         { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()    {}
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb8d3714996346ac, []int{3}
}

func (m *DeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResponse.Unmarshal(m, b)
}
func (m *DeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResponse.Marshal(b, m, deterministic)
}
func (m *DeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResponse.Merge(m, src)
}
func (m *DeleteResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteResponse.Size(m)
}
func (m *DeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResponse proto.InternalMessageInfo

func (m *DeleteResponse) GetResponse() []byte {
	if m != nil {
		return m.Response
	}
	return nil
}

type GetAPIsResponse struct {
	Response             []byte   `protobuf:"bytes,1,opt,name=Response,proto3" json:"Response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAPIsResponse) Reset()         { *m = GetAPIsResponse{} }
func (m *GetAPIsResponse) String() string { return proto.CompactTextString(m) }
func (*GetAPIsResponse) ProtoMessage()    {}
func (*GetAPIsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb8d3714996346ac, []int{4}
}

func (m *GetAPIsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAPIsResponse.Unmarshal(m, b)
}
func (m *GetAPIsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAPIsResponse.Marshal(b, m, deterministic)
}
func (m *GetAPIsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAPIsResponse.Merge(m, src)
}
func (m *GetAPIsResponse) XXX_Size() int {
	return xxx_messageInfo_GetAPIsResponse.Size(m)
}
func (m *GetAPIsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAPIsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAPIsResponse proto.InternalMessageInfo

func (m *GetAPIsResponse) GetResponse() []byte {
	if m != nil {
		return m.Response
	}
	return nil
}

type GetAPIResponse struct {
	Response             []byte   `protobuf:"bytes,1,opt,name=Response,proto3" json:"Response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAPIResponse) Reset()         { *m = GetAPIResponse{} }
func (m *GetAPIResponse) String() string { return proto.CompactTextString(m) }
func (*GetAPIResponse) ProtoMessage()    {}
func (*GetAPIResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb8d3714996346ac, []int{5}
}

func (m *GetAPIResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAPIResponse.Unmarshal(m, b)
}
func (m *GetAPIResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAPIResponse.Marshal(b, m, deterministic)
}
func (m *GetAPIResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAPIResponse.Merge(m, src)
}
func (m *GetAPIResponse) XXX_Size() int {
	return xxx_messageInfo_GetAPIResponse.Size(m)
}
func (m *GetAPIResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAPIResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAPIResponse proto.InternalMessageInfo

func (m *GetAPIResponse) GetResponse() []byte {
	if m != nil {
		return m.Response
	}
	return nil
}

type LogsResponse struct {
	Response             []byte   `protobuf:"bytes,1,opt,name=Response,proto3" json:"Response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogsResponse) Reset()         { *m = LogsResponse{} }
func (m *LogsResponse) String() string { return proto.CompactTextString(m) }
func (*LogsResponse) ProtoMessage()    {}
func (*LogsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb8d3714996346ac, []int{6}
}

func (m *LogsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogsResponse.Unmarshal(m, b)
}
func (m *LogsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogsResponse.Marshal(b, m, deterministic)
}
func (m *LogsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogsResponse.Merge(m, src)
}
func (m *LogsResponse) XXX_Size() int {
	return xxx_messageInfo_LogsResponse.Size(m)
}
func (m *LogsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LogsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LogsResponse proto.InternalMessageInfo

func (m *LogsResponse) GetResponse() []byte {
	if m != nil {
		return m.Response
	}
	return nil
}

type UploadRequest struct {
	Config               []byte   `protobuf:"bytes,1,opt,name=Config,proto3" json:"Config,omitempty"`
	Project              []byte   `protobuf:"bytes,2,opt,name=Project,proto3" json:"Project,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadRequest) Reset()         { *m = UploadRequest{} }
func (m *UploadRequest) String() string { return proto.CompactTextString(m) }
func (*UploadRequest) ProtoMessage()    {}
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb8d3714996346ac, []int{7}
}

func (m *UploadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadRequest.Unmarshal(m, b)
}
func (m *UploadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadRequest.Marshal(b, m, deterministic)
}
func (m *UploadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadRequest.Merge(m, src)
}
func (m *UploadRequest) XXX_Size() int {
	return xxx_messageInfo_UploadRequest.Size(m)
}
func (m *UploadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UploadRequest proto.InternalMessageInfo

func (m *UploadRequest) GetConfig() []byte {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *UploadRequest) GetProject() []byte {
	if m != nil {
		return m.Project
	}
	return nil
}

func init() {
	proto.RegisterType((*InfoResponse)(nil), "pb.InfoResponse")
	proto.RegisterType((*DeployResponse)(nil), "pb.DeployResponse")
	proto.RegisterType((*RefreshResponse)(nil), "pb.RefreshResponse")
	proto.RegisterType((*DeleteResponse)(nil), "pb.DeleteResponse")
	proto.RegisterType((*GetAPIsResponse)(nil), "pb.GetAPIsResponse")
	proto.RegisterType((*GetAPIResponse)(nil), "pb.GetAPIResponse")
	proto.RegisterType((*LogsResponse)(nil), "pb.LogsResponse")
	proto.RegisterType((*UploadRequest)(nil), "pb.UploadRequest")
}

func init() { proto.RegisterFile("operator.proto", fileDescriptor_cb8d3714996346ac) }

var fileDescriptor_cb8d3714996346ac = []byte{
	// 332 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0x41, 0x4b, 0x02, 0x41,
	0x14, 0xc7, 0x77, 0x4d, 0x54, 0x1e, 0xa6, 0x35, 0x81, 0xc8, 0x76, 0x89, 0x39, 0x89, 0xd4, 0x1a,
	0x0a, 0xd1, 0xd5, 0x4a, 0x42, 0xe8, 0x20, 0x1b, 0x5d, 0xba, 0xb9, 0xfa, 0x76, 0x33, 0xb6, 0x7d,
	0xd3, 0xec, 0x18, 0xf8, 0x4d, 0xfa, 0xb8, 0x31, 0x3b, 0x6b, 0xa8, 0xe0, 0x32, 0xb7, 0x7d, 0x6f,
	0xfe, 0xf3, 0xff, 0x2d, 0xf3, 0x83, 0x16, 0x09, 0x94, 0x73, 0x45, 0xd2, 0x17, 0x92, 0x14, 0xb1,
	0x8a, 0x08, 0xbd, 0xcb, 0x98, 0x28, 0x4e, 0x70, 0x90, 0x6f, 0xc2, 0x75, 0x34, 0xc0, 0x2f, 0xa1,
	0x36, 0x26, 0xc0, 0xfb, 0xd0, 0x9c, 0xa6, 0x11, 0x05, 0x98, 0x09, 0x4a, 0x33, 0x64, 0x1e, 0x34,
	0xb6, 0xdf, 0x5d, 0xf7, 0xca, 0xed, 0x35, 0x83, 0xff, 0x99, 0x5f, 0x43, 0xeb, 0x09, 0x45, 0x42,
	0x1b, 0xab, 0xf4, 0x0d, 0xb4, 0x03, 0x8c, 0x24, 0x66, 0x1f, 0xf6, 0xe5, 0x09, 0x2a, 0xb4, 0x2d,
	0x7f, 0x46, 0x35, 0x9e, 0x4d, 0x33, 0xdb, 0x72, 0x13, 0xb7, 0x4a, 0xf7, 0xa1, 0xf9, 0x42, 0xb1,
	0x5d, 0xf3, 0x18, 0x4e, 0xdf, 0x44, 0x42, 0xf3, 0x65, 0x80, 0xdf, 0x6b, 0xcc, 0x14, 0xeb, 0x40,
	0xed, 0x91, 0xd2, 0x68, 0x15, 0x17, 0xd1, 0x62, 0x62, 0x5d, 0xa8, 0xcf, 0x24, 0x7d, 0xe2, 0x42,
	0x75, 0x2b, 0xf9, 0xc1, 0x76, 0x1c, 0xfe, 0x9e, 0x40, 0x7b, 0x92, 0x2e, 0x67, 0xb4, 0x4a, 0xd5,
	0x2b, 0xca, 0x9f, 0xd5, 0x02, 0xd9, 0x10, 0xaa, 0x5a, 0x0b, 0xeb, 0xf8, 0x46, 0x9e, 0xbf, 0x95,
	0xe7, 0x4f, 0xb4, 0x3c, 0xef, 0xcc, 0x17, 0xa1, 0xbf, 0x2b, 0x8e, 0x3b, 0x6c, 0x04, 0x35, 0xa3,
	0x87, 0x9d, 0xeb, 0xd3, 0xbd, 0xdf, 0xf2, 0x98, 0x5e, 0xed, 0xdb, 0xe3, 0x4e, 0xcf, 0x65, 0xf7,
	0x50, 0x2f, 0x2c, 0x1d, 0x65, 0x5d, 0xe8, 0xab, 0x07, 0x2a, 0xb9, 0xc3, 0xee, 0x34, 0x4e, 0x0b,
	0x3b, 0x7a, 0xb1, 0x60, 0xee, 0x4a, 0xe5, 0x8e, 0x26, 0x16, 0xea, 0xca, 0x89, 0x07, 0x7e, 0x0d,
	0xd1, 0x2c, 0xcb, 0x89, 0xfb, 0xa6, 0x73, 0x62, 0x23, 0xc0, 0xf9, 0x52, 0x3b, 0x2d, 0x7f, 0xd0,
	0x5d, 0xeb, 0xdc, 0xb9, 0x75, 0x1f, 0xaa, 0xef, 0x15, 0x11, 0x86, 0xb5, 0x3c, 0x3b, 0xfa, 0x0b,
	0x00, 0x00, 0xff, 0xff, 0x2d, 0x7a, 0x13, 0x31, 0x5d, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// EndPointServiceClient is the client API for EndPointService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EndPointServiceClient interface {
	Info(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*InfoResponse, error)
	Deploy(ctx context.Context, opts ...grpc.CallOption) (EndPointService_DeployClient, error)
	Refresh(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*RefreshResponse, error)
	Delete(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*DeleteResponse, error)
	GetAPIs(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetAPIsResponse, error)
	GetAPI(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetAPIResponse, error)
	ReadLogs(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (EndPointService_ReadLogsClient, error)
}

type endPointServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewEndPointServiceClient(cc grpc.ClientConnInterface) EndPointServiceClient {
	return &endPointServiceClient{cc}
}

func (c *endPointServiceClient) Info(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*InfoResponse, error) {
	out := new(InfoResponse)
	err := c.cc.Invoke(ctx, "/pb.EndPointService/Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *endPointServiceClient) Deploy(ctx context.Context, opts ...grpc.CallOption) (EndPointService_DeployClient, error) {
	stream, err := c.cc.NewStream(ctx, &_EndPointService_serviceDesc.Streams[0], "/pb.EndPointService/Deploy", opts...)
	if err != nil {
		return nil, err
	}
	x := &endPointServiceDeployClient{stream}
	return x, nil
}

type EndPointService_DeployClient interface {
	Send(*UploadRequest) error
	CloseAndRecv() (*DeployResponse, error)
	grpc.ClientStream
}

type endPointServiceDeployClient struct {
	grpc.ClientStream
}

func (x *endPointServiceDeployClient) Send(m *UploadRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *endPointServiceDeployClient) CloseAndRecv() (*DeployResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(DeployResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *endPointServiceClient) Refresh(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*RefreshResponse, error) {
	out := new(RefreshResponse)
	err := c.cc.Invoke(ctx, "/pb.EndPointService/Refresh", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *endPointServiceClient) Delete(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/pb.EndPointService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *endPointServiceClient) GetAPIs(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetAPIsResponse, error) {
	out := new(GetAPIsResponse)
	err := c.cc.Invoke(ctx, "/pb.EndPointService/GetAPIs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *endPointServiceClient) GetAPI(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetAPIResponse, error) {
	out := new(GetAPIResponse)
	err := c.cc.Invoke(ctx, "/pb.EndPointService/GetAPI", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *endPointServiceClient) ReadLogs(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (EndPointService_ReadLogsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_EndPointService_serviceDesc.Streams[1], "/pb.EndPointService/ReadLogs", opts...)
	if err != nil {
		return nil, err
	}
	x := &endPointServiceReadLogsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type EndPointService_ReadLogsClient interface {
	Recv() (*LogsResponse, error)
	grpc.ClientStream
}

type endPointServiceReadLogsClient struct {
	grpc.ClientStream
}

func (x *endPointServiceReadLogsClient) Recv() (*LogsResponse, error) {
	m := new(LogsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// EndPointServiceServer is the server API for EndPointService service.
type EndPointServiceServer interface {
	Info(context.Context, *empty.Empty) (*InfoResponse, error)
	Deploy(EndPointService_DeployServer) error
	Refresh(context.Context, *empty.Empty) (*RefreshResponse, error)
	Delete(context.Context, *empty.Empty) (*DeleteResponse, error)
	GetAPIs(context.Context, *empty.Empty) (*GetAPIsResponse, error)
	GetAPI(context.Context, *empty.Empty) (*GetAPIResponse, error)
	ReadLogs(*empty.Empty, EndPointService_ReadLogsServer) error
}

// UnimplementedEndPointServiceServer can be embedded to have forward compatible implementations.
type UnimplementedEndPointServiceServer struct {
}

func (*UnimplementedEndPointServiceServer) Info(ctx context.Context, req *empty.Empty) (*InfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Info not implemented")
}
func (*UnimplementedEndPointServiceServer) Deploy(srv EndPointService_DeployServer) error {
	return status.Errorf(codes.Unimplemented, "method Deploy not implemented")
}
func (*UnimplementedEndPointServiceServer) Refresh(ctx context.Context, req *empty.Empty) (*RefreshResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Refresh not implemented")
}
func (*UnimplementedEndPointServiceServer) Delete(ctx context.Context, req *empty.Empty) (*DeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedEndPointServiceServer) GetAPIs(ctx context.Context, req *empty.Empty) (*GetAPIsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAPIs not implemented")
}
func (*UnimplementedEndPointServiceServer) GetAPI(ctx context.Context, req *empty.Empty) (*GetAPIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAPI not implemented")
}
func (*UnimplementedEndPointServiceServer) ReadLogs(req *empty.Empty, srv EndPointService_ReadLogsServer) error {
	return status.Errorf(codes.Unimplemented, "method ReadLogs not implemented")
}

func RegisterEndPointServiceServer(s *grpc.Server, srv EndPointServiceServer) {
	s.RegisterService(&_EndPointService_serviceDesc, srv)
}

func _EndPointService_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EndPointServiceServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.EndPointService/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EndPointServiceServer).Info(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _EndPointService_Deploy_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(EndPointServiceServer).Deploy(&endPointServiceDeployServer{stream})
}

type EndPointService_DeployServer interface {
	SendAndClose(*DeployResponse) error
	Recv() (*UploadRequest, error)
	grpc.ServerStream
}

type endPointServiceDeployServer struct {
	grpc.ServerStream
}

func (x *endPointServiceDeployServer) SendAndClose(m *DeployResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *endPointServiceDeployServer) Recv() (*UploadRequest, error) {
	m := new(UploadRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _EndPointService_Refresh_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EndPointServiceServer).Refresh(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.EndPointService/Refresh",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EndPointServiceServer).Refresh(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _EndPointService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EndPointServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.EndPointService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EndPointServiceServer).Delete(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _EndPointService_GetAPIs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EndPointServiceServer).GetAPIs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.EndPointService/GetAPIs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EndPointServiceServer).GetAPIs(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _EndPointService_GetAPI_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EndPointServiceServer).GetAPI(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.EndPointService/GetAPI",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EndPointServiceServer).GetAPI(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _EndPointService_ReadLogs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(EndPointServiceServer).ReadLogs(m, &endPointServiceReadLogsServer{stream})
}

type EndPointService_ReadLogsServer interface {
	Send(*LogsResponse) error
	grpc.ServerStream
}

type endPointServiceReadLogsServer struct {
	grpc.ServerStream
}

func (x *endPointServiceReadLogsServer) Send(m *LogsResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _EndPointService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.EndPointService",
	HandlerType: (*EndPointServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Info",
			Handler:    _EndPointService_Info_Handler,
		},
		{
			MethodName: "Refresh",
			Handler:    _EndPointService_Refresh_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _EndPointService_Delete_Handler,
		},
		{
			MethodName: "GetAPIs",
			Handler:    _EndPointService_GetAPIs_Handler,
		},
		{
			MethodName: "GetAPI",
			Handler:    _EndPointService_GetAPI_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Deploy",
			Handler:       _EndPointService_Deploy_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "ReadLogs",
			Handler:       _EndPointService_ReadLogs_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "operator.proto",
}
