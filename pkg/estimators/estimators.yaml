# Copyright 2019 Cortex Labs, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- kind: estimator
  name: dnn_classifier
  path: dnn_classifier.py
  target_column: INT_COLUMN|STRING_COLUMN
  input:
    # Specify num_classes if target is INT_COLUMN
    num_classes:
      _type: INT
      _optional: True

    # Specify target_vocab if target is STRING_COLUMN
    target_vocab:
      _type: [STRING]
      _optional: True

    numeric_columns:
      _type: [INT_COLUMN|FLOAT_COLUMN]
      _default: []
    categorical_columns_with_identity:
      _type:
        - col: INT_COLUMN
          num_classes: INT
          embedding_size: # If not specified, an indicator column will be used instead
            _type: INT
            _optional: true
          weight_column:
            _type: INT_COLUMN|FLOAT_COLUMN
            _optional: True
      _default: []
    categorical_columns_with_vocab:
      _type:
        - col: STRING_COLUMN|INT_COLUMN
          vocab: [STRING|INT]
          embedding_size: # If not specified, an indicator column will be used instead
            _type: INT
            _optional: true
          weight_column:
            _type: INT_COLUMN|FLOAT_COLUMN
            _optional: True
      _default: []
    categorical_columns_with_hash_bucket:
      _type:
        - col: STRING_COLUMN|INT_COLUMN
          hash_bucket_size: INT
          embedding_size: # If not specified, an indicator column will be used instead
            _type: INT
            _optional: true
          weight_column:
            _type: INT_COLUMN|FLOAT_COLUMN
            _optional: True
      _default: []
    bucketized_columns:
      _type:
        - col: INT_COLUMN|FLOAT_COLUMN
          boundaries: [FLOAT]
      _default: []
  training_input:
    _type:
      weight_column:
        _type: INT_COLUMN|FLOAT_COLUMN
        _optional: True
    _default: {}
  hparams:
    hidden_units: [INT]

- kind: estimator
  name: dnn_regressor
  path: dnn_regressor.py
  target_column: FLOAT_COLUMN
  input:
    numeric_columns:
      _type: [INT_COLUMN|FLOAT_COLUMN]
      _default: []
    categorical_columns_with_identity:
      _type:
        - col: INT_COLUMN
          num_classes: INT
          embedding_size: # If not specified, an indicator column will be used instead
            _type: INT
            _optional: true
          weight_column:
            _type: INT_COLUMN|FLOAT_COLUMN
            _optional: True
      _default: []
    categorical_columns_with_vocab:
      _type:
        - col: STRING_COLUMN|INT_COLUMN
          vocab: [STRING|INT]
          embedding_size: # If not specified, an indicator column will be used instead
            _type: INT
            _optional: true
          weight_column:
            _type: INT_COLUMN|FLOAT_COLUMN
            _optional: True
      _default: []
    categorical_columns_with_hash_bucket:
      _type:
        - col: STRING_COLUMN|INT_COLUMN
          hash_bucket_size: INT
          embedding_size: # If not specified, an indicator column will be used instead
            _type: INT
            _optional: true
          weight_column:
            _type: INT_COLUMN|FLOAT_COLUMN
            _optional: True
      _default: []
    bucketized_columns:
      _type:
        - col: INT_COLUMN|FLOAT_COLUMN
          boundaries: [FLOAT]
      _default: []
  training_input:
    _type:
      weight_column:
        _type: INT_COLUMN|FLOAT_COLUMN
        _optional: True
    _default: {}
  hparams:
    hidden_units: [INT]

- kind: estimator
  name: linear_classifier
  path: linear_classifier.py
  target_column: INT_COLUMN|STRING_COLUMN
  input:
    # Specify num_classes if target is INT_COLUMN
    num_classes:
      _type: INT
      _optional: True

    # Specify target_vocab if target is STRING_COLUMN
    target_vocab:
      _type: [STRING]
      _optional: True

    numeric_columns:
      _type: [INT_COLUMN|FLOAT_COLUMN]
      _default: []
    categorical_columns_with_identity:
      _type:
        - col: INT_COLUMN
          num_classes: INT
          weight_column:
            _type: INT_COLUMN|FLOAT_COLUMN
            _optional: True
      _default: []
    categorical_columns_with_vocab:
      _type:
        - col: STRING_COLUMN|INT_COLUMN
          vocab: [STRING|INT]
          weight_column:
            _type: INT_COLUMN|FLOAT_COLUMN
            _optional: True
      _default: []
    categorical_columns_with_hash_bucket:
      _type:
        - col: STRING_COLUMN|INT_COLUMN
          hash_bucket_size: INT
          weight_column:
            _type: INT_COLUMN|FLOAT_COLUMN
            _optional: True
      _default: []
    bucketized_columns:
      _type:
        - col: INT_COLUMN|FLOAT_COLUMN
          boundaries: [FLOAT]
      _default: []
  training_input:
    _type:
      weight_column:
        _type: INT_COLUMN|FLOAT_COLUMN
        _optional: True
    _default: {}

- kind: estimator
  name: linear_regressor
  path: linear_regressor.py
  target_column: FLOAT_COLUMN
  input:
    numeric_columns:
      _type: [INT_COLUMN|FLOAT_COLUMN]
      _default: []
    categorical_columns_with_identity:
      _type:
        - col: INT_COLUMN
          num_classes: INT
          weight_column:
            _type: INT_COLUMN|FLOAT_COLUMN
            _optional: True
      _default: []
    categorical_columns_with_vocab:
      _type:
        - col: STRING_COLUMN|INT_COLUMN
          vocab: [STRING|INT]
          weight_column:
            _type: INT_COLUMN|FLOAT_COLUMN
            _optional: True
      _default: []
    categorical_columns_with_hash_bucket:
      _type:
        - col: STRING_COLUMN|INT_COLUMN
          hash_bucket_size: INT
          weight_column:
            _type: INT_COLUMN|FLOAT_COLUMN
            _optional: True
      _default: []
    bucketized_columns:
      _type:
        - col: INT_COLUMN|FLOAT_COLUMN
          boundaries: [FLOAT]
      _default: []
  training_input:
    _type:
      weight_column:
        _type: INT_COLUMN|FLOAT_COLUMN
        _optional: True
    _default: {}

- kind: estimator
  name: dnn_linear_combined_classifier
  path: dnn_linear_combined_classifier.py
  target_column: INT_COLUMN|STRING_COLUMN
  input:
    # Specify num_classes if target is INT_COLUMN
    num_classes:
      _type: INT
      _optional: True

    # Specify target_vocab if target is STRING_COLUMN
    target_vocab:
      _type: [STRING]
      _optional: True

    dnn_columns:
      numeric_columns:
        _type: [INT_COLUMN|FLOAT_COLUMN]
        _default: []
      categorical_columns_with_identity:
        _type:
          - col: INT_COLUMN
            num_classes: INT
            embedding_size: # If not specified, an indicator column will be used instead
              _type: INT
              _optional: true
            weight_column:
              _type: INT_COLUMN|FLOAT_COLUMN
              _optional: True
        _default: []
      categorical_columns_with_vocab:
        _type:
          - col: STRING_COLUMN|INT_COLUMN
            vocab: [STRING|INT]
            embedding_size: # If not specified, an indicator column will be used instead
              _type: INT
              _optional: true
            weight_column:
              _type: INT_COLUMN|FLOAT_COLUMN
              _optional: True
        _default: []
      categorical_columns_with_hash_bucket:
        _type:
          - col: STRING_COLUMN|INT_COLUMN
            hash_bucket_size: INT
            embedding_size: # If not specified, an indicator column will be used instead
              _type: INT
              _optional: true
            weight_column:
              _type: INT_COLUMN|FLOAT_COLUMN
              _optional: True
        _default: []
      bucketized_columns:
        _type:
          - col: INT_COLUMN|FLOAT_COLUMN
            boundaries: [FLOAT]
        _default: []

    linear_columns:
      numeric_columns:
        _type: [INT_COLUMN|FLOAT_COLUMN]
        _default: []
      categorical_columns_with_identity:
        _type:
          - col: INT_COLUMN
            num_classes: INT
            weight_column:
              _type: INT_COLUMN|FLOAT_COLUMN
              _optional: True
        _default: []
      categorical_columns_with_vocab:
        _type:
          - col: STRING_COLUMN|INT_COLUMN
            vocab: [STRING|INT]
            weight_column:
              _type: INT_COLUMN|FLOAT_COLUMN
              _optional: True
        _default: []
      categorical_columns_with_hash_bucket:
        _type:
          - col: STRING_COLUMN|INT_COLUMN
            hash_bucket_size: INT
            weight_column:
              _type: INT_COLUMN|FLOAT_COLUMN
              _optional: True
        _default: []
      bucketized_columns:
        _type:
          - col: INT_COLUMN|FLOAT_COLUMN
            boundaries: [FLOAT]
        _default: []

  training_input:
    _type:
      weight_column:
        _type: INT_COLUMN|FLOAT_COLUMN
        _optional: True
    _default: {}
  hparams:
    dnn_hidden_units: [INT]

- kind: estimator
  name: dnn_linear_combined_regressor
  path: dnn_linear_combined_regressor.py
  target_column: FLOAT_COLUMN
  input:
    dnn_columns:
      numeric_columns:
        _type: [INT_COLUMN|FLOAT_COLUMN]
        _default: []
      categorical_columns_with_identity:
        _type:
          - col: INT_COLUMN
            num_classes: INT
            embedding_size: # If not specified, an indicator column will be used instead
              _type: INT
              _optional: true
            weight_column:
              _type: INT_COLUMN|FLOAT_COLUMN
              _optional: True
        _default: []
      categorical_columns_with_vocab:
        _type:
          - col: STRING_COLUMN|INT_COLUMN
            vocab: [STRING|INT]
            embedding_size: # If not specified, an indicator column will be used instead
              _type: INT
              _optional: true
            weight_column:
              _type: INT_COLUMN|FLOAT_COLUMN
              _optional: True
        _default: []
      categorical_columns_with_hash_bucket:
        _type:
          - col: STRING_COLUMN|INT_COLUMN
            hash_bucket_size: INT
            embedding_size: # If not specified, an indicator column will be used instead
              _type: INT
              _optional: true
            weight_column:
              _type: INT_COLUMN|FLOAT_COLUMN
              _optional: True
        _default: []
      bucketized_columns:
        _type:
          - col: INT_COLUMN|FLOAT_COLUMN
            boundaries: [FLOAT]
        _default: []

    linear_columns:
      numeric_columns:
        _type: [INT_COLUMN|FLOAT_COLUMN]
        _default: []
      categorical_columns_with_identity:
        _type:
          - col: INT_COLUMN
            num_classes: INT
            weight_column:
              _type: INT_COLUMN|FLOAT_COLUMN
              _optional: True
        _default: []
      categorical_columns_with_vocab:
        _type:
          - col: STRING_COLUMN|INT_COLUMN
            vocab: [STRING|INT]
            weight_column:
              _type: INT_COLUMN|FLOAT_COLUMN
              _optional: True
        _default: []
      categorical_columns_with_hash_bucket:
        _type:
          - col: STRING_COLUMN|INT_COLUMN
            hash_bucket_size: INT
            weight_column:
              _type: INT_COLUMN|FLOAT_COLUMN
              _optional: True
        _default: []
      bucketized_columns:
        _type:
          - col: INT_COLUMN|FLOAT_COLUMN
            boundaries: [FLOAT]
        _default: []

  training_input:
    _type:
      weight_column:
        _type: INT_COLUMN|FLOAT_COLUMN
        _optional: True
    _default: {}
  hparams:
    dnn_hidden_units: [INT]

- kind: estimator
  name: boosted_trees_classifier
  path: boosted_trees_classifier.py
  target_column: INT_COLUMN|STRING_COLUMN
  input:
    # Specify num_classes if target is INT_COLUMN
    num_classes:
      _type: INT
      _optional: True

    # Specify target_vocab if target is STRING_COLUMN
    target_vocab:
      _type: [STRING]
      _optional: True

    numeric_columns:
      _type: [INT_COLUMN|FLOAT_COLUMN]
      _default: []
    categorical_columns_with_identity:
      _type:
        - col: INT_COLUMN
          num_classes: INT
          embedding_size: # If not specified, an indicator column will be used instead
            _type: INT
            _optional: true
          weight_column:
            _type: INT_COLUMN|FLOAT_COLUMN
            _optional: True
      _default: []
    categorical_columns_with_vocab:
      _type:
        - col: STRING_COLUMN|INT_COLUMN
          vocab: [STRING|INT]
          embedding_size: # If not specified, an indicator column will be used instead
            _type: INT
            _optional: true
          weight_column:
            _type: INT_COLUMN|FLOAT_COLUMN
            _optional: True
      _default: []
    categorical_columns_with_hash_bucket:
      _type:
        - col: STRING_COLUMN|INT_COLUMN
          hash_bucket_size: INT
          embedding_size: # If not specified, an indicator column will be used instead
            _type: INT
            _optional: true
          weight_column:
            _type: INT_COLUMN|FLOAT_COLUMN
            _optional: True
      _default: []
    bucketized_columns:
      _type:
        - col: INT_COLUMN|FLOAT_COLUMN
          boundaries: [FLOAT]
      _default: []
  training_input:
    _type:
      weight_column:
        _type: INT_COLUMN|FLOAT_COLUMN
        _optional: True
    _default: {}
  hparams:
    batches_per_layer: INT
    num_trees:
      _type: INT
      _default: 100
    max_depth:
      _type: INT
      _default: 6
    learning_rate:
      _type: FLOAT
      _default: 0.1
    l1_regularization:
      _type: FLOAT
      _default: 0
    l2_regularization:
      _type: FLOAT
      _default: 0
    tree_complexity:
      _type: FLOAT
      _default: 0
    min_node_weight:
      _type: FLOAT
      _default: 0
    center_bias:
      _type: BOOL
      _default: False
    quantile_sketch_epsilon:
      _type: FLOAT
      _default: 0.01

- kind: estimator
  name: boosted_trees_regressor
  path: boosted_trees_regressor.py
  target_column: FLOAT_COLUMN
  input:
    numeric_columns:
      _type: [INT_COLUMN|FLOAT_COLUMN]
      _default: []
    categorical_columns_with_identity:
      _type:
        - col: INT_COLUMN
          num_classes: INT
          embedding_size: # If not specified, an indicator column will be used instead
            _type: INT
            _optional: true
          weight_column:
            _type: INT_COLUMN|FLOAT_COLUMN
            _optional: True
      _default: []
    categorical_columns_with_vocab:
      _type:
        - col: STRING_COLUMN|INT_COLUMN
          vocab: [STRING|INT]
          embedding_size: # If not specified, an indicator column will be used instead
            _type: INT
            _optional: true
          weight_column:
            _type: INT_COLUMN|FLOAT_COLUMN
            _optional: True
      _default: []
    categorical_columns_with_hash_bucket:
      _type:
        - col: STRING_COLUMN|INT_COLUMN
          hash_bucket_size: INT
          embedding_size: # If not specified, an indicator column will be used instead
            _type: INT
            _optional: true
          weight_column:
            _type: INT_COLUMN|FLOAT_COLUMN
            _optional: True
      _default: []
    bucketized_columns:
      _type:
        - col: INT_COLUMN|FLOAT_COLUMN
          boundaries: [FLOAT]
      _default: []
  training_input:
    _type:
      weight_column:
        _type: INT_COLUMN|FLOAT_COLUMN
        _optional: True
    _default: {}
  hparams:
    batches_per_layer: INT
    num_trees:
      _type: INT
      _default: 100
    max_depth:
      _type: INT
      _default: 6
    learning_rate:
      _type: FLOAT
      _default: 0.1
    l1_regularization:
      _type: FLOAT
      _default: 0
    l2_regularization:
      _type: FLOAT
      _default: 0
    tree_complexity:
      _type: FLOAT
      _default: 0
    min_node_weight:
      _type: FLOAT
      _default: 0
    center_bias:
      _type: BOOL
      _default: False
    quantile_sketch_epsilon:
      _type: FLOAT
      _default: 0.01
